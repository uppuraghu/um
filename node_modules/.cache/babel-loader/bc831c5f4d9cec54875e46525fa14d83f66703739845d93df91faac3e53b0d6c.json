{"ast":null,"code":"import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    let addOptions = {\n      passive: true\n    };\n    if (isBoolean(options)) {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    const removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\nexport class EventListeners {\n  constructor(container) {\n    this.container = container;\n    this._doMouseTouchClick = e => {\n      const container = this.container,\n        options = container.actualOptions;\n      if (this._canPush) {\n        const mouseInteractivity = container.interactivity.mouse,\n          mousePos = mouseInteractivity.position;\n        if (!mousePos) {\n          return;\n        }\n        mouseInteractivity.clickPosition = {\n          ...mousePos\n        };\n        mouseInteractivity.clickTime = new Date().getTime();\n        const onClick = options.interactivity.events.onClick;\n        executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n      }\n      if (e.type === \"touchend\") {\n        setTimeout(() => this._mouseTouchFinish(), touchDelay);\n      }\n    };\n    this._handleThemeChange = e => {\n      const mediaEvent = e,\n        container = this.container,\n        options = container.options,\n        defaultThemes = options.defaultThemes,\n        themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light,\n        theme = options.themes.find(theme => theme.name === themeName);\n      if (theme?.default.auto) {\n        void container.loadTheme(themeName);\n      }\n    };\n    this._handleVisibilityChange = () => {\n      const container = this.container,\n        options = container.actualOptions;\n      this._mouseTouchFinish();\n      if (!options.pauseOnBlur) {\n        return;\n      }\n      if (document?.hidden) {\n        container.pageHidden = true;\n        container.pause();\n      } else {\n        container.pageHidden = false;\n        if (container.animationStatus) {\n          void container.play(true);\n        } else {\n          void container.draw(true);\n        }\n      }\n    };\n    this._handleWindowResize = () => {\n      if (this._resizeTimeout) {\n        clearTimeout(this._resizeTimeout);\n        delete this._resizeTimeout;\n      }\n      const handleResize = async () => {\n        const canvas = this.container.canvas;\n        await canvas?.windowResize();\n      };\n      this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n    };\n    this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n      const handlers = this._handlers,\n        container = this.container,\n        options = container.actualOptions,\n        interactivityEl = container.interactivity.element;\n      if (!interactivityEl) {\n        return;\n      }\n      const html = interactivityEl,\n        canvasEl = container.canvas.element;\n      if (canvasEl) {\n        canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n      }\n      if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n        return;\n      }\n      manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n      manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n      manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n      if (!options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n      } else {\n        manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n        manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n        manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n      }\n      manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n      manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n    };\n    this._manageListeners = add => {\n      const handlers = this._handlers,\n        container = this.container,\n        options = container.actualOptions,\n        detectType = options.interactivity.detectsOn,\n        canvasEl = container.canvas.element;\n      let mouseLeaveTmpEvent = mouseLeaveEvent;\n      if (detectType === InteractivityDetect.window) {\n        container.interactivity.element = window;\n        mouseLeaveTmpEvent = mouseOutEvent;\n      } else if (detectType === InteractivityDetect.parent && canvasEl) {\n        container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n      } else {\n        container.interactivity.element = canvasEl;\n      }\n      this._manageMediaMatch(add);\n      this._manageResize(add);\n      this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n      if (document) {\n        manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n      }\n    };\n    this._manageMediaMatch = add => {\n      const handlers = this._handlers,\n        mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n      if (!mediaMatch) {\n        return;\n      }\n      if (mediaMatch.addEventListener !== undefined) {\n        manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n        return;\n      }\n      if (mediaMatch.addListener === undefined) {\n        return;\n      }\n      if (add) {\n        mediaMatch.addListener(handlers.oldThemeChange);\n      } else {\n        mediaMatch.removeListener(handlers.oldThemeChange);\n      }\n    };\n    this._manageResize = add => {\n      const handlers = this._handlers,\n        container = this.container,\n        options = container.actualOptions;\n      if (!options.interactivity.events.resize) {\n        return;\n      }\n      if (typeof ResizeObserver === \"undefined\") {\n        manageListener(window, resizeEvent, handlers.resize, add);\n        return;\n      }\n      const canvasEl = container.canvas.element;\n      if (this._resizeObserver && !add) {\n        if (canvasEl) {\n          this._resizeObserver.unobserve(canvasEl);\n        }\n        this._resizeObserver.disconnect();\n        delete this._resizeObserver;\n      } else if (!this._resizeObserver && add && canvasEl) {\n        this._resizeObserver = new ResizeObserver(entries => {\n          const entry = entries.find(e => e.target === canvasEl);\n          if (!entry) {\n            return;\n          }\n          this._handleWindowResize();\n        });\n        this._resizeObserver.observe(canvasEl);\n      }\n    };\n    this._mouseDown = () => {\n      const {\n        interactivity\n      } = this.container;\n      if (!interactivity) {\n        return;\n      }\n      const {\n        mouse\n      } = interactivity;\n      mouse.clicking = true;\n      mouse.downPosition = mouse.position;\n    };\n    this._mouseTouchClick = e => {\n      const container = this.container,\n        options = container.actualOptions,\n        {\n          mouse\n        } = container.interactivity;\n      mouse.inside = true;\n      let handled = false;\n      const mousePosition = mouse.position;\n      if (!mousePosition || !options.interactivity.events.onClick.enable) {\n        return;\n      }\n      for (const plugin of container.plugins.values()) {\n        if (!plugin.clickPositionValid) {\n          continue;\n        }\n        handled = plugin.clickPositionValid(mousePosition);\n        if (handled) {\n          break;\n        }\n      }\n      if (!handled) {\n        this._doMouseTouchClick(e);\n      }\n      mouse.clicking = false;\n    };\n    this._mouseTouchFinish = () => {\n      const interactivity = this.container.interactivity;\n      if (!interactivity) {\n        return;\n      }\n      const mouse = interactivity.mouse;\n      delete mouse.position;\n      delete mouse.clickPosition;\n      delete mouse.downPosition;\n      interactivity.status = mouseLeaveEvent;\n      mouse.inside = false;\n      mouse.clicking = false;\n    };\n    this._mouseTouchMove = e => {\n      const container = this.container,\n        options = container.actualOptions,\n        interactivity = container.interactivity,\n        canvasEl = container.canvas.element;\n      if (!interactivity?.element) {\n        return;\n      }\n      interactivity.mouse.inside = true;\n      let pos;\n      if (e.type.startsWith(\"pointer\")) {\n        this._canPush = true;\n        const mouseEvent = e;\n        if (interactivity.element === window) {\n          if (canvasEl) {\n            const clientRect = canvasEl.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.clientX - clientRect.left,\n              y: mouseEvent.clientY - clientRect.top\n            };\n          }\n        } else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n          const source = mouseEvent.target,\n            target = mouseEvent.currentTarget;\n          if (source && target && canvasEl) {\n            const sourceRect = source.getBoundingClientRect(),\n              targetRect = target.getBoundingClientRect(),\n              canvasRect = canvasEl.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n              y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top)\n            };\n          } else {\n            pos = {\n              x: mouseEvent.offsetX ?? mouseEvent.clientX,\n              y: mouseEvent.offsetY ?? mouseEvent.clientY\n            };\n          }\n        } else if (mouseEvent.target === canvasEl) {\n          pos = {\n            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n            y: mouseEvent.offsetY ?? mouseEvent.clientY\n          };\n        }\n      } else {\n        this._canPush = e.type !== \"touchmove\";\n        if (canvasEl) {\n          const touchEvent = e,\n            lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset],\n            canvasRect = canvasEl.getBoundingClientRect();\n          pos = {\n            x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n            y: lastTouch.clientY - (canvasRect.top ?? minCoordinate)\n          };\n        }\n      }\n      const pxRatio = container.retina.pixelRatio;\n      if (pos) {\n        pos.x *= pxRatio;\n        pos.y *= pxRatio;\n      }\n      interactivity.mouse.position = pos;\n      interactivity.status = mouseMoveEvent;\n    };\n    this._touchEnd = e => {\n      const evt = e,\n        touches = Array.from(evt.changedTouches);\n      for (const touch of touches) {\n        this._touches.delete(touch.identifier);\n      }\n      this._mouseTouchFinish();\n    };\n    this._touchEndClick = e => {\n      const evt = e,\n        touches = Array.from(evt.changedTouches);\n      for (const touch of touches) {\n        this._touches.delete(touch.identifier);\n      }\n      this._mouseTouchClick(e);\n    };\n    this._touchStart = e => {\n      const evt = e,\n        touches = Array.from(evt.changedTouches);\n      for (const touch of touches) {\n        this._touches.set(touch.identifier, performance.now());\n      }\n      this._mouseTouchMove(e);\n    };\n    this._canPush = true;\n    this._touches = new Map();\n    this._handlers = {\n      mouseDown: () => this._mouseDown(),\n      mouseLeave: () => this._mouseTouchFinish(),\n      mouseMove: e => this._mouseTouchMove(e),\n      mouseUp: e => this._mouseTouchClick(e),\n      touchStart: e => this._touchStart(e),\n      touchMove: e => this._mouseTouchMove(e),\n      touchEnd: e => this._touchEnd(e),\n      touchCancel: e => this._touchEnd(e),\n      touchEndClick: e => this._touchEndClick(e),\n      visibilityChange: () => this._handleVisibilityChange(),\n      themeChange: e => this._handleThemeChange(e),\n      oldThemeChange: e => this._handleThemeChange(e),\n      resize: () => {\n        this._handleWindowResize();\n      }\n    };\n  }\n  addListeners() {\n    this._manageListeners(true);\n  }\n  removeListeners() {\n    this._manageListeners(false);\n  }\n}","map":{"version":3,"names":["double","lengthOffset","millisecondsToSeconds","minCoordinate","mouseDownEvent","mouseLeaveEvent","mouseMoveEvent","mouseOutEvent","mouseUpEvent","resizeEvent","touchCancelEvent","touchDelay","touchEndEvent","touchMoveEvent","touchStartEvent","visibilityChangeEvent","executeOnSingleOrMultiple","safeMatchMedia","InteractivityDetect","isBoolean","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","EventListeners","constructor","container","_doMouseTouchClick","e","actualOptions","_canPush","mouseInteractivity","interactivity","mouse","mousePos","position","clickPosition","clickTime","Date","getTime","onClick","events","mode","handleClickMode","type","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","document","hidden","pageHidden","pause","animationStatus","play","draw","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","canvas","windowResize","resize","delay","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","style","pointerEvents","onHover","enable","mouseMove","touchStart","touchMove","touchEnd","touchEndClick","mouseUp","mouseDown","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","window","parent","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","themeChange","addListener","oldThemeChange","removeListener","ResizeObserver","_resizeObserver","unobserve","disconnect","entries","entry","target","observe","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","plugin","plugins","values","clickPositionValid","status","_mouseTouchMove","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","pxRatio","retina","pixelRatio","_touchEnd","evt","Array","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","set","performance","now","Map","addListeners","removeListeners"],"sources":["D:/UNIMART-OVERSEAS/unimart/node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js"],"sourcesContent":["import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,YAAY,EAAEC,qBAAqB,EAAEC,aAAa,EAAEC,cAAc,EAAEC,eAAe,EAAEC,cAAc,EAAEC,aAAa,EAAEC,YAAY,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,aAAa,EAAEC,cAAc,EAAEC,eAAe,EAAEC,qBAAqB,QAAS,gBAAgB;AAC5R,SAASC,yBAAyB,EAAEC,cAAc,QAAQ,sBAAsB;AAChF,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,cAAcA,CAACC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,GAAG,EAAEC,OAAO,EAAE;EAC3D,IAAID,GAAG,EAAE;IACL,IAAIE,UAAU,GAAG;MAAEC,OAAO,EAAE;IAAK,CAAC;IAClC,IAAIR,SAAS,CAACM,OAAO,CAAC,EAAE;MACpBC,UAAU,CAACE,OAAO,GAAGH,OAAO;IAChC,CAAC,MACI,IAAIA,OAAO,KAAKI,SAAS,EAAE;MAC5BH,UAAU,GAAGD,OAAO;IACxB;IACAJ,OAAO,CAACS,gBAAgB,CAACR,KAAK,EAAEC,OAAO,EAAEG,UAAU,CAAC;EACxD,CAAC,MACI;IACD,MAAMK,aAAa,GAAGN,OAAO;IAC7BJ,OAAO,CAACW,mBAAmB,CAACV,KAAK,EAAEC,OAAO,EAAEQ,aAAa,CAAC;EAC9D;AACJ;AACA,OAAO,MAAME,cAAc,CAAC;EACxBC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,kBAAkB,GAAGC,CAAC,IAAI;MAC3B,MAAMF,SAAS,GAAG,IAAI,CAACA,SAAS;QAAEV,OAAO,GAAGU,SAAS,CAACG,aAAa;MACnE,IAAI,IAAI,CAACC,QAAQ,EAAE;QACf,MAAMC,kBAAkB,GAAGL,SAAS,CAACM,aAAa,CAACC,KAAK;UAAEC,QAAQ,GAAGH,kBAAkB,CAACI,QAAQ;QAChG,IAAI,CAACD,QAAQ,EAAE;UACX;QACJ;QACAH,kBAAkB,CAACK,aAAa,GAAG;UAAE,GAAGF;QAAS,CAAC;QAClDH,kBAAkB,CAACM,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QACnD,MAAMC,OAAO,GAAGxB,OAAO,CAACgB,aAAa,CAACS,MAAM,CAACD,OAAO;QACpDjC,yBAAyB,CAACiC,OAAO,CAACE,IAAI,EAAEA,IAAI,IAAI,IAAI,CAAChB,SAAS,CAACiB,eAAe,CAACD,IAAI,CAAC,CAAC;MACzF;MACA,IAAId,CAAC,CAACgB,IAAI,KAAK,UAAU,EAAE;QACvBC,UAAU,CAAC,MAAM,IAAI,CAACC,iBAAiB,CAAC,CAAC,EAAE5C,UAAU,CAAC;MAC1D;IACJ,CAAC;IACD,IAAI,CAAC6C,kBAAkB,GAAInB,CAAC,IAAK;MAC7B,MAAMoB,UAAU,GAAGpB,CAAC;QAAEF,SAAS,GAAG,IAAI,CAACA,SAAS;QAAEV,OAAO,GAAGU,SAAS,CAACV,OAAO;QAAEiC,aAAa,GAAGjC,OAAO,CAACiC,aAAa;QAAEC,SAAS,GAAGF,UAAU,CAACG,OAAO,GAAGF,aAAa,CAACG,IAAI,GAAGH,aAAa,CAACI,KAAK;QAAEC,KAAK,GAAGtC,OAAO,CAACuC,MAAM,CAACC,IAAI,CAACF,KAAK,IAAIA,KAAK,CAACG,IAAI,KAAKP,SAAS,CAAC;MAC/P,IAAII,KAAK,EAAEI,OAAO,CAACC,IAAI,EAAE;QACrB,KAAKjC,SAAS,CAACkC,SAAS,CAACV,SAAS,CAAC;MACvC;IACJ,CAAC;IACD,IAAI,CAACW,uBAAuB,GAAG,MAAM;MACjC,MAAMnC,SAAS,GAAG,IAAI,CAACA,SAAS;QAAEV,OAAO,GAAGU,SAAS,CAACG,aAAa;MACnE,IAAI,CAACiB,iBAAiB,CAAC,CAAC;MACxB,IAAI,CAAC9B,OAAO,CAAC8C,WAAW,EAAE;QACtB;MACJ;MACA,IAAIC,QAAQ,EAAEC,MAAM,EAAE;QAClBtC,SAAS,CAACuC,UAAU,GAAG,IAAI;QAC3BvC,SAAS,CAACwC,KAAK,CAAC,CAAC;MACrB,CAAC,MACI;QACDxC,SAAS,CAACuC,UAAU,GAAG,KAAK;QAC5B,IAAIvC,SAAS,CAACyC,eAAe,EAAE;UAC3B,KAAKzC,SAAS,CAAC0C,IAAI,CAAC,IAAI,CAAC;QAC7B,CAAC,MACI;UACD,KAAK1C,SAAS,CAAC2C,IAAI,CAAC,IAAI,CAAC;QAC7B;MACJ;IACJ,CAAC;IACD,IAAI,CAACC,mBAAmB,GAAG,MAAM;MAC7B,IAAI,IAAI,CAACC,cAAc,EAAE;QACrBC,YAAY,CAAC,IAAI,CAACD,cAAc,CAAC;QACjC,OAAO,IAAI,CAACA,cAAc;MAC9B;MACA,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC7B,MAAMC,MAAM,GAAG,IAAI,CAAChD,SAAS,CAACgD,MAAM;QACpC,MAAMA,MAAM,EAAEC,YAAY,CAAC,CAAC;MAChC,CAAC;MACD,IAAI,CAACJ,cAAc,GAAG1B,UAAU,CAAC,MAAM,KAAK4B,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC/C,SAAS,CAACG,aAAa,CAACG,aAAa,CAACS,MAAM,CAACmC,MAAM,CAACC,KAAK,GAAGpF,qBAAqB,CAAC;IACvJ,CAAC;IACD,IAAI,CAACqF,6BAA6B,GAAG,CAACC,kBAAkB,EAAEhE,GAAG,KAAK;MAC9D,MAAMiE,QAAQ,GAAG,IAAI,CAACC,SAAS;QAAEvD,SAAS,GAAG,IAAI,CAACA,SAAS;QAAEV,OAAO,GAAGU,SAAS,CAACG,aAAa;QAAEqD,eAAe,GAAGxD,SAAS,CAACM,aAAa,CAACpB,OAAO;MACjJ,IAAI,CAACsE,eAAe,EAAE;QAClB;MACJ;MACA,MAAMC,IAAI,GAAGD,eAAe;QAAEE,QAAQ,GAAG1D,SAAS,CAACgD,MAAM,CAAC9D,OAAO;MACjE,IAAIwE,QAAQ,EAAE;QACVA,QAAQ,CAACC,KAAK,CAACC,aAAa,GAAGH,IAAI,KAAKC,QAAQ,GAAG,SAAS,GAAG,MAAM;MACzE;MACA,IAAI,EAAEpE,OAAO,CAACgB,aAAa,CAACS,MAAM,CAAC8C,OAAO,CAACC,MAAM,IAAIxE,OAAO,CAACgB,aAAa,CAACS,MAAM,CAACD,OAAO,CAACgD,MAAM,CAAC,EAAE;QAC/F;MACJ;MACA7E,cAAc,CAACuE,eAAe,EAAErF,cAAc,EAAEmF,QAAQ,CAACS,SAAS,EAAE1E,GAAG,CAAC;MACxEJ,cAAc,CAACuE,eAAe,EAAE7E,eAAe,EAAE2E,QAAQ,CAACU,UAAU,EAAE3E,GAAG,CAAC;MAC1EJ,cAAc,CAACuE,eAAe,EAAE9E,cAAc,EAAE4E,QAAQ,CAACW,SAAS,EAAE5E,GAAG,CAAC;MACxE,IAAI,CAACC,OAAO,CAACgB,aAAa,CAACS,MAAM,CAACD,OAAO,CAACgD,MAAM,EAAE;QAC9C7E,cAAc,CAACuE,eAAe,EAAE/E,aAAa,EAAE6E,QAAQ,CAACY,QAAQ,EAAE7E,GAAG,CAAC;MAC1E,CAAC,MACI;QACDJ,cAAc,CAACuE,eAAe,EAAE/E,aAAa,EAAE6E,QAAQ,CAACa,aAAa,EAAE9E,GAAG,CAAC;QAC3EJ,cAAc,CAACuE,eAAe,EAAEnF,YAAY,EAAEiF,QAAQ,CAACc,OAAO,EAAE/E,GAAG,CAAC;QACpEJ,cAAc,CAACuE,eAAe,EAAEvF,cAAc,EAAEqF,QAAQ,CAACe,SAAS,EAAEhF,GAAG,CAAC;MAC5E;MACAJ,cAAc,CAACuE,eAAe,EAAEH,kBAAkB,EAAEC,QAAQ,CAACgB,UAAU,EAAEjF,GAAG,CAAC;MAC7EJ,cAAc,CAACuE,eAAe,EAAEjF,gBAAgB,EAAE+E,QAAQ,CAACiB,WAAW,EAAElF,GAAG,CAAC;IAChF,CAAC;IACD,IAAI,CAACmF,gBAAgB,GAAGnF,GAAG,IAAI;MAC3B,MAAMiE,QAAQ,GAAG,IAAI,CAACC,SAAS;QAAEvD,SAAS,GAAG,IAAI,CAACA,SAAS;QAAEV,OAAO,GAAGU,SAAS,CAACG,aAAa;QAAEsE,UAAU,GAAGnF,OAAO,CAACgB,aAAa,CAACoE,SAAS;QAAEhB,QAAQ,GAAG1D,SAAS,CAACgD,MAAM,CAAC9D,OAAO;MACjL,IAAImE,kBAAkB,GAAGnF,eAAe;MACxC,IAAIuG,UAAU,KAAK1F,mBAAmB,CAAC4F,MAAM,EAAE;QAC3C3E,SAAS,CAACM,aAAa,CAACpB,OAAO,GAAGyF,MAAM;QACxCtB,kBAAkB,GAAGjF,aAAa;MACtC,CAAC,MACI,IAAIqG,UAAU,KAAK1F,mBAAmB,CAAC6F,MAAM,IAAIlB,QAAQ,EAAE;QAC5D1D,SAAS,CAACM,aAAa,CAACpB,OAAO,GAAGwE,QAAQ,CAACmB,aAAa,IAAInB,QAAQ,CAACoB,UAAU;MACnF,CAAC,MACI;QACD9E,SAAS,CAACM,aAAa,CAACpB,OAAO,GAAGwE,QAAQ;MAC9C;MACA,IAAI,CAACqB,iBAAiB,CAAC1F,GAAG,CAAC;MAC3B,IAAI,CAAC2F,aAAa,CAAC3F,GAAG,CAAC;MACvB,IAAI,CAAC+D,6BAA6B,CAACC,kBAAkB,EAAEhE,GAAG,CAAC;MAC3D,IAAIgD,QAAQ,EAAE;QACVpD,cAAc,CAACoD,QAAQ,EAAEzD,qBAAqB,EAAE0E,QAAQ,CAAC2B,gBAAgB,EAAE5F,GAAG,EAAE,KAAK,CAAC;MAC1F;IACJ,CAAC;IACD,IAAI,CAAC0F,iBAAiB,GAAG1F,GAAG,IAAI;MAC5B,MAAMiE,QAAQ,GAAG,IAAI,CAACC,SAAS;QAAE2B,UAAU,GAAGpG,cAAc,CAAC,8BAA8B,CAAC;MAC5F,IAAI,CAACoG,UAAU,EAAE;QACb;MACJ;MACA,IAAIA,UAAU,CAACvF,gBAAgB,KAAKD,SAAS,EAAE;QAC3CT,cAAc,CAACiG,UAAU,EAAE,QAAQ,EAAE5B,QAAQ,CAAC6B,WAAW,EAAE9F,GAAG,CAAC;QAC/D;MACJ;MACA,IAAI6F,UAAU,CAACE,WAAW,KAAK1F,SAAS,EAAE;QACtC;MACJ;MACA,IAAIL,GAAG,EAAE;QACL6F,UAAU,CAACE,WAAW,CAAC9B,QAAQ,CAAC+B,cAAc,CAAC;MACnD,CAAC,MACI;QACDH,UAAU,CAACI,cAAc,CAAChC,QAAQ,CAAC+B,cAAc,CAAC;MACtD;IACJ,CAAC;IACD,IAAI,CAACL,aAAa,GAAG3F,GAAG,IAAI;MACxB,MAAMiE,QAAQ,GAAG,IAAI,CAACC,SAAS;QAAEvD,SAAS,GAAG,IAAI,CAACA,SAAS;QAAEV,OAAO,GAAGU,SAAS,CAACG,aAAa;MAC9F,IAAI,CAACb,OAAO,CAACgB,aAAa,CAACS,MAAM,CAACmC,MAAM,EAAE;QACtC;MACJ;MACA,IAAI,OAAOqC,cAAc,KAAK,WAAW,EAAE;QACvCtG,cAAc,CAAC0F,MAAM,EAAErG,WAAW,EAAEgF,QAAQ,CAACJ,MAAM,EAAE7D,GAAG,CAAC;QACzD;MACJ;MACA,MAAMqE,QAAQ,GAAG1D,SAAS,CAACgD,MAAM,CAAC9D,OAAO;MACzC,IAAI,IAAI,CAACsG,eAAe,IAAI,CAACnG,GAAG,EAAE;QAC9B,IAAIqE,QAAQ,EAAE;UACV,IAAI,CAAC8B,eAAe,CAACC,SAAS,CAAC/B,QAAQ,CAAC;QAC5C;QACA,IAAI,CAAC8B,eAAe,CAACE,UAAU,CAAC,CAAC;QACjC,OAAO,IAAI,CAACF,eAAe;MAC/B,CAAC,MACI,IAAI,CAAC,IAAI,CAACA,eAAe,IAAInG,GAAG,IAAIqE,QAAQ,EAAE;QAC/C,IAAI,CAAC8B,eAAe,GAAG,IAAID,cAAc,CAAEI,OAAO,IAAK;UACnD,MAAMC,KAAK,GAAGD,OAAO,CAAC7D,IAAI,CAAC5B,CAAC,IAAIA,CAAC,CAAC2F,MAAM,KAAKnC,QAAQ,CAAC;UACtD,IAAI,CAACkC,KAAK,EAAE;YACR;UACJ;UACA,IAAI,CAAChD,mBAAmB,CAAC,CAAC;QAC9B,CAAC,CAAC;QACF,IAAI,CAAC4C,eAAe,CAACM,OAAO,CAACpC,QAAQ,CAAC;MAC1C;IACJ,CAAC;IACD,IAAI,CAACqC,UAAU,GAAG,MAAM;MACpB,MAAM;QAAEzF;MAAc,CAAC,GAAG,IAAI,CAACN,SAAS;MACxC,IAAI,CAACM,aAAa,EAAE;QAChB;MACJ;MACA,MAAM;QAAEC;MAAM,CAAC,GAAGD,aAAa;MAC/BC,KAAK,CAACyF,QAAQ,GAAG,IAAI;MACrBzF,KAAK,CAAC0F,YAAY,GAAG1F,KAAK,CAACE,QAAQ;IACvC,CAAC;IACD,IAAI,CAACyF,gBAAgB,GAAGhG,CAAC,IAAI;MACzB,MAAMF,SAAS,GAAG,IAAI,CAACA,SAAS;QAAEV,OAAO,GAAGU,SAAS,CAACG,aAAa;QAAE;UAAEI;QAAM,CAAC,GAAGP,SAAS,CAACM,aAAa;MACxGC,KAAK,CAAC4F,MAAM,GAAG,IAAI;MACnB,IAAIC,OAAO,GAAG,KAAK;MACnB,MAAMC,aAAa,GAAG9F,KAAK,CAACE,QAAQ;MACpC,IAAI,CAAC4F,aAAa,IAAI,CAAC/G,OAAO,CAACgB,aAAa,CAACS,MAAM,CAACD,OAAO,CAACgD,MAAM,EAAE;QAChE;MACJ;MACA,KAAK,MAAMwC,MAAM,IAAItG,SAAS,CAACuG,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QAC7C,IAAI,CAACF,MAAM,CAACG,kBAAkB,EAAE;UAC5B;QACJ;QACAL,OAAO,GAAGE,MAAM,CAACG,kBAAkB,CAACJ,aAAa,CAAC;QAClD,IAAID,OAAO,EAAE;UACT;QACJ;MACJ;MACA,IAAI,CAACA,OAAO,EAAE;QACV,IAAI,CAACnG,kBAAkB,CAACC,CAAC,CAAC;MAC9B;MACAK,KAAK,CAACyF,QAAQ,GAAG,KAAK;IAC1B,CAAC;IACD,IAAI,CAAC5E,iBAAiB,GAAG,MAAM;MAC3B,MAAMd,aAAa,GAAG,IAAI,CAACN,SAAS,CAACM,aAAa;MAClD,IAAI,CAACA,aAAa,EAAE;QAChB;MACJ;MACA,MAAMC,KAAK,GAAGD,aAAa,CAACC,KAAK;MACjC,OAAOA,KAAK,CAACE,QAAQ;MACrB,OAAOF,KAAK,CAACG,aAAa;MAC1B,OAAOH,KAAK,CAAC0F,YAAY;MACzB3F,aAAa,CAACoG,MAAM,GAAGxI,eAAe;MACtCqC,KAAK,CAAC4F,MAAM,GAAG,KAAK;MACpB5F,KAAK,CAACyF,QAAQ,GAAG,KAAK;IAC1B,CAAC;IACD,IAAI,CAACW,eAAe,GAAGzG,CAAC,IAAI;MACxB,MAAMF,SAAS,GAAG,IAAI,CAACA,SAAS;QAAEV,OAAO,GAAGU,SAAS,CAACG,aAAa;QAAEG,aAAa,GAAGN,SAAS,CAACM,aAAa;QAAEoD,QAAQ,GAAG1D,SAAS,CAACgD,MAAM,CAAC9D,OAAO;MACjJ,IAAI,CAACoB,aAAa,EAAEpB,OAAO,EAAE;QACzB;MACJ;MACAoB,aAAa,CAACC,KAAK,CAAC4F,MAAM,GAAG,IAAI;MACjC,IAAIS,GAAG;MACP,IAAI1G,CAAC,CAACgB,IAAI,CAAC2F,UAAU,CAAC,SAAS,CAAC,EAAE;QAC9B,IAAI,CAACzG,QAAQ,GAAG,IAAI;QACpB,MAAM0G,UAAU,GAAG5G,CAAC;QACpB,IAAII,aAAa,CAACpB,OAAO,KAAKyF,MAAM,EAAE;UAClC,IAAIjB,QAAQ,EAAE;YACV,MAAMqD,UAAU,GAAGrD,QAAQ,CAACsD,qBAAqB,CAAC,CAAC;YACnDJ,GAAG,GAAG;cACFK,CAAC,EAAEH,UAAU,CAACI,OAAO,GAAGH,UAAU,CAACI,IAAI;cACvCC,CAAC,EAAEN,UAAU,CAACO,OAAO,GAAGN,UAAU,CAACO;YACvC,CAAC;UACL;QACJ,CAAC,MACI,IAAIhI,OAAO,CAACgB,aAAa,CAACoE,SAAS,KAAK3F,mBAAmB,CAAC6F,MAAM,EAAE;UACrE,MAAM2C,MAAM,GAAGT,UAAU,CAACjB,MAAM;YAAEA,MAAM,GAAGiB,UAAU,CAACU,aAAa;UACnE,IAAID,MAAM,IAAI1B,MAAM,IAAInC,QAAQ,EAAE;YAC9B,MAAM+D,UAAU,GAAGF,MAAM,CAACP,qBAAqB,CAAC,CAAC;cAAEU,UAAU,GAAG7B,MAAM,CAACmB,qBAAqB,CAAC,CAAC;cAAEW,UAAU,GAAGjE,QAAQ,CAACsD,qBAAqB,CAAC,CAAC;YAC7IJ,GAAG,GAAG;cACFK,CAAC,EAAEH,UAAU,CAACc,OAAO,GAAG/J,MAAM,GAAG4J,UAAU,CAACN,IAAI,IAAIO,UAAU,CAACP,IAAI,GAAGQ,UAAU,CAACR,IAAI,CAAC;cACtFC,CAAC,EAAEN,UAAU,CAACe,OAAO,GAAGhK,MAAM,GAAG4J,UAAU,CAACH,GAAG,IAAII,UAAU,CAACJ,GAAG,GAAGK,UAAU,CAACL,GAAG;YACtF,CAAC;UACL,CAAC,MACI;YACDV,GAAG,GAAG;cACFK,CAAC,EAAEH,UAAU,CAACc,OAAO,IAAId,UAAU,CAACI,OAAO;cAC3CE,CAAC,EAAEN,UAAU,CAACe,OAAO,IAAIf,UAAU,CAACO;YACxC,CAAC;UACL;QACJ,CAAC,MACI,IAAIP,UAAU,CAACjB,MAAM,KAAKnC,QAAQ,EAAE;UACrCkD,GAAG,GAAG;YACFK,CAAC,EAAEH,UAAU,CAACc,OAAO,IAAId,UAAU,CAACI,OAAO;YAC3CE,CAAC,EAAEN,UAAU,CAACe,OAAO,IAAIf,UAAU,CAACO;UACxC,CAAC;QACL;MACJ,CAAC,MACI;QACD,IAAI,CAACjH,QAAQ,GAAGF,CAAC,CAACgB,IAAI,KAAK,WAAW;QACtC,IAAIwC,QAAQ,EAAE;UACV,MAAMoE,UAAU,GAAG5H,CAAC;YAAE6H,SAAS,GAAGD,UAAU,CAACE,OAAO,CAACF,UAAU,CAACE,OAAO,CAACC,MAAM,GAAGnK,YAAY,CAAC;YAAE6J,UAAU,GAAGjE,QAAQ,CAACsD,qBAAqB,CAAC,CAAC;UAC7IJ,GAAG,GAAG;YACFK,CAAC,EAAEc,SAAS,CAACb,OAAO,IAAIS,UAAU,CAACR,IAAI,IAAInJ,aAAa,CAAC;YACzDoJ,CAAC,EAAEW,SAAS,CAACV,OAAO,IAAIM,UAAU,CAACL,GAAG,IAAItJ,aAAa;UAC3D,CAAC;QACL;MACJ;MACA,MAAMkK,OAAO,GAAGlI,SAAS,CAACmI,MAAM,CAACC,UAAU;MAC3C,IAAIxB,GAAG,EAAE;QACLA,GAAG,CAACK,CAAC,IAAIiB,OAAO;QAChBtB,GAAG,CAACQ,CAAC,IAAIc,OAAO;MACpB;MACA5H,aAAa,CAACC,KAAK,CAACE,QAAQ,GAAGmG,GAAG;MAClCtG,aAAa,CAACoG,MAAM,GAAGvI,cAAc;IACzC,CAAC;IACD,IAAI,CAACkK,SAAS,GAAGnI,CAAC,IAAI;MAClB,MAAMoI,GAAG,GAAGpI,CAAC;QAAE8H,OAAO,GAAGO,KAAK,CAACC,IAAI,CAACF,GAAG,CAACG,cAAc,CAAC;MACvD,KAAK,MAAMC,KAAK,IAAIV,OAAO,EAAE;QACzB,IAAI,CAACW,QAAQ,CAACC,MAAM,CAACF,KAAK,CAACG,UAAU,CAAC;MAC1C;MACA,IAAI,CAACzH,iBAAiB,CAAC,CAAC;IAC5B,CAAC;IACD,IAAI,CAAC0H,cAAc,GAAG5I,CAAC,IAAI;MACvB,MAAMoI,GAAG,GAAGpI,CAAC;QAAE8H,OAAO,GAAGO,KAAK,CAACC,IAAI,CAACF,GAAG,CAACG,cAAc,CAAC;MACvD,KAAK,MAAMC,KAAK,IAAIV,OAAO,EAAE;QACzB,IAAI,CAACW,QAAQ,CAACC,MAAM,CAACF,KAAK,CAACG,UAAU,CAAC;MAC1C;MACA,IAAI,CAAC3C,gBAAgB,CAAChG,CAAC,CAAC;IAC5B,CAAC;IACD,IAAI,CAAC6I,WAAW,GAAG7I,CAAC,IAAI;MACpB,MAAMoI,GAAG,GAAGpI,CAAC;QAAE8H,OAAO,GAAGO,KAAK,CAACC,IAAI,CAACF,GAAG,CAACG,cAAc,CAAC;MACvD,KAAK,MAAMC,KAAK,IAAIV,OAAO,EAAE;QACzB,IAAI,CAACW,QAAQ,CAACK,GAAG,CAACN,KAAK,CAACG,UAAU,EAAEI,WAAW,CAACC,GAAG,CAAC,CAAC,CAAC;MAC1D;MACA,IAAI,CAACvC,eAAe,CAACzG,CAAC,CAAC;IAC3B,CAAC;IACD,IAAI,CAACE,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACuI,QAAQ,GAAG,IAAIQ,GAAG,CAAC,CAAC;IACzB,IAAI,CAAC5F,SAAS,GAAG;MACbc,SAAS,EAAEA,CAAA,KAAM,IAAI,CAAC0B,UAAU,CAAC,CAAC;MAClCzB,UAAU,EAAEA,CAAA,KAAM,IAAI,CAAClD,iBAAiB,CAAC,CAAC;MAC1C2C,SAAS,EAAG7D,CAAC,IAAK,IAAI,CAACyG,eAAe,CAACzG,CAAC,CAAC;MACzCkE,OAAO,EAAGlE,CAAC,IAAK,IAAI,CAACgG,gBAAgB,CAAChG,CAAC,CAAC;MACxC8D,UAAU,EAAG9D,CAAC,IAAK,IAAI,CAAC6I,WAAW,CAAC7I,CAAC,CAAC;MACtC+D,SAAS,EAAG/D,CAAC,IAAK,IAAI,CAACyG,eAAe,CAACzG,CAAC,CAAC;MACzCgE,QAAQ,EAAGhE,CAAC,IAAK,IAAI,CAACmI,SAAS,CAACnI,CAAC,CAAC;MAClCqE,WAAW,EAAGrE,CAAC,IAAK,IAAI,CAACmI,SAAS,CAACnI,CAAC,CAAC;MACrCiE,aAAa,EAAGjE,CAAC,IAAK,IAAI,CAAC4I,cAAc,CAAC5I,CAAC,CAAC;MAC5C+E,gBAAgB,EAAEA,CAAA,KAAM,IAAI,CAAC9C,uBAAuB,CAAC,CAAC;MACtDgD,WAAW,EAAGjF,CAAC,IAAK,IAAI,CAACmB,kBAAkB,CAACnB,CAAC,CAAC;MAC9CmF,cAAc,EAAGnF,CAAC,IAAK,IAAI,CAACmB,kBAAkB,CAACnB,CAAC,CAAC;MACjDgD,MAAM,EAAEA,CAAA,KAAM;QACV,IAAI,CAACN,mBAAmB,CAAC,CAAC;MAC9B;IACJ,CAAC;EACL;EACAwG,YAAYA,CAAA,EAAG;IACX,IAAI,CAAC5E,gBAAgB,CAAC,IAAI,CAAC;EAC/B;EACA6E,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC7E,gBAAgB,CAAC,KAAK,CAAC;EAChC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}