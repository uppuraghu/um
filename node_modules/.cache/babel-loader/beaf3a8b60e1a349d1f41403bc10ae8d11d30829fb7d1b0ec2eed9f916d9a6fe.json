{"ast":null,"code":"import { OutMode, OutModeDirection } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n  return outModes.default === outMode || outModes.bottom === outMode || outModes.left === outMode || outModes.right === outMode || outModes.top === outMode;\n};\nexport class OutOfCanvasUpdater {\n  constructor(container) {\n    this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n      const outModes = particle.options.move.outModes;\n      if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n        this.updaters.set(outMode, getUpdater(this.container));\n      }\n    };\n    this._updateOutMode = (particle, delta, outMode, direction) => {\n      for (const updater of this.updaters.values()) {\n        updater.update(particle, direction, delta, outMode);\n      }\n    };\n    this.container = container;\n    this.updaters = new Map();\n  }\n  init(particle) {\n    this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n    this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n    this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n    this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n  }\n  isEnabled(particle) {\n    return !particle.destroyed && !particle.spawning;\n  }\n  update(particle, delta) {\n    const outModes = particle.options.move.outModes;\n    this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n    this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n    this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n    this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n  }\n}","map":{"version":3,"names":["OutMode","OutModeDirection","BounceOutMode","DestroyOutMode","NoneOutMode","OutOutMode","checkOutMode","outModes","outMode","default","bottom","left","right","top","OutOfCanvasUpdater","constructor","container","_addUpdaterIfMissing","particle","getUpdater","options","move","updaters","has","set","_updateOutMode","delta","direction","updater","values","update","Map","init","bounce","out","destroy","none","isEnabled","destroyed","spawning"],"sources":["D:/UNIMART-OVERSEAS/unimart/node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js"],"sourcesContent":["import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n            const outModes = particle.options.move.outModes;\n            if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n                this.updaters.set(outMode, getUpdater(this.container));\n            }\n        };\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters.values()) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = new Map();\n    }\n    init(particle) {\n        this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,gBAAgB,QAAS,qBAAqB;AAChE,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,MAAMC,YAAY,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;EACxC,OAAQD,QAAQ,CAACE,OAAO,KAAKD,OAAO,IAChCD,QAAQ,CAACG,MAAM,KAAKF,OAAO,IAC3BD,QAAQ,CAACI,IAAI,KAAKH,OAAO,IACzBD,QAAQ,CAACK,KAAK,KAAKJ,OAAO,IAC1BD,QAAQ,CAACM,GAAG,KAAKL,OAAO;AAChC,CAAC;AACD,OAAO,MAAMM,kBAAkB,CAAC;EAC5BC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACC,oBAAoB,GAAG,CAACC,QAAQ,EAAEV,OAAO,EAAEW,UAAU,KAAK;MAC3D,MAAMZ,QAAQ,GAAGW,QAAQ,CAACE,OAAO,CAACC,IAAI,CAACd,QAAQ;MAC/C,IAAI,CAAC,IAAI,CAACe,QAAQ,CAACC,GAAG,CAACf,OAAO,CAAC,IAAIF,YAAY,CAACC,QAAQ,EAAEC,OAAO,CAAC,EAAE;QAChE,IAAI,CAACc,QAAQ,CAACE,GAAG,CAAChB,OAAO,EAAEW,UAAU,CAAC,IAAI,CAACH,SAAS,CAAC,CAAC;MAC1D;IACJ,CAAC;IACD,IAAI,CAACS,cAAc,GAAG,CAACP,QAAQ,EAAEQ,KAAK,EAAElB,OAAO,EAAEmB,SAAS,KAAK;MAC3D,KAAK,MAAMC,OAAO,IAAI,IAAI,CAACN,QAAQ,CAACO,MAAM,CAAC,CAAC,EAAE;QAC1CD,OAAO,CAACE,MAAM,CAACZ,QAAQ,EAAES,SAAS,EAAED,KAAK,EAAElB,OAAO,CAAC;MACvD;IACJ,CAAC;IACD,IAAI,CAACQ,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACM,QAAQ,GAAG,IAAIS,GAAG,CAAC,CAAC;EAC7B;EACAC,IAAIA,CAACd,QAAQ,EAAE;IACX,IAAI,CAACD,oBAAoB,CAACC,QAAQ,EAAElB,OAAO,CAACiC,MAAM,EAAEjB,SAAS,IAAI,IAAId,aAAa,CAACc,SAAS,CAAC,CAAC;IAC9F,IAAI,CAACC,oBAAoB,CAACC,QAAQ,EAAElB,OAAO,CAACkC,GAAG,EAAElB,SAAS,IAAI,IAAIX,UAAU,CAACW,SAAS,CAAC,CAAC;IACxF,IAAI,CAACC,oBAAoB,CAACC,QAAQ,EAAElB,OAAO,CAACmC,OAAO,EAAEnB,SAAS,IAAI,IAAIb,cAAc,CAACa,SAAS,CAAC,CAAC;IAChG,IAAI,CAACC,oBAAoB,CAACC,QAAQ,EAAElB,OAAO,CAACoC,IAAI,EAAEpB,SAAS,IAAI,IAAIZ,WAAW,CAACY,SAAS,CAAC,CAAC;EAC9F;EACAqB,SAASA,CAACnB,QAAQ,EAAE;IAChB,OAAO,CAACA,QAAQ,CAACoB,SAAS,IAAI,CAACpB,QAAQ,CAACqB,QAAQ;EACpD;EACAT,MAAMA,CAACZ,QAAQ,EAAEQ,KAAK,EAAE;IACpB,MAAMnB,QAAQ,GAAGW,QAAQ,CAACE,OAAO,CAACC,IAAI,CAACd,QAAQ;IAC/C,IAAI,CAACkB,cAAc,CAACP,QAAQ,EAAEQ,KAAK,EAAEnB,QAAQ,CAACG,MAAM,IAAIH,QAAQ,CAACE,OAAO,EAAER,gBAAgB,CAACS,MAAM,CAAC;IAClG,IAAI,CAACe,cAAc,CAACP,QAAQ,EAAEQ,KAAK,EAAEnB,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACE,OAAO,EAAER,gBAAgB,CAACU,IAAI,CAAC;IAC9F,IAAI,CAACc,cAAc,CAACP,QAAQ,EAAEQ,KAAK,EAAEnB,QAAQ,CAACK,KAAK,IAAIL,QAAQ,CAACE,OAAO,EAAER,gBAAgB,CAACW,KAAK,CAAC;IAChG,IAAI,CAACa,cAAc,CAACP,QAAQ,EAAEQ,KAAK,EAAEnB,QAAQ,CAACM,GAAG,IAAIN,QAAQ,CAACE,OAAO,EAAER,gBAAgB,CAACY,GAAG,CAAC;EAChG;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}